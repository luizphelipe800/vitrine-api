steps:
  # Step 1: Create Artifact Registry repository if it doesn't exist
  - name: "gcr.io/google.com/cloudsdktool/google-cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gcloud artifacts repositories describe ${_REPOSITORY} --location=${_REGION} --project=${PROJECT_ID} >/dev/null 2>&1 || 
        gcloud artifacts repositories create ${_REPOSITORY} --repository-format=docker --location=${_REGION} --project=${PROJECT_ID} --description="Production repository for vitrine-api"

  # Step 2: Build the container image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA",
        ".",
      ]

  # Step 3: Push the container image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA",
      ]

# Specify the image to be produced
images:
  - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA"

# Substitutions to make the build configuration reusable
substitutions:
  _REGION: "us-central1"
  _REPOSITORY: "vitrine-prod-repo"
  _IMAGE_NAME: "vitrine-api-prod"

# Add the logging option to fix the error
options:
  logging: CLOUD_LOGGING_ONLY
